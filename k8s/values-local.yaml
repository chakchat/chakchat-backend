deployments:
  messaging:
    annotations:
      "helm.sh/hook": post-install 
      "helm.sh/hook-weight": "1" 
    replicas: 1
    containers:
      - name: messaging
        image: docker.io/library/messaging:local
        volumeMounts:
          - name: messaging-conf
            mountPath: /etc/messaging
            readOnly: true
          - name: public-rsa-key-sec
            mountPath: /app/keys
            readOnly: true
        envFrom:
          - secretRef:
              name: messaging-sec-env
    volumes:
      - name: messaging-conf
        configMap:
          name: messaging-conf
      - name: public-rsa-key-sec
        secret:
          secretName: public-rsa-key-sec
  identity:
    replicas: 1
    containers:
      - name: identity
        image: identity:local
        volumeMounts:
          - name: identity-conf
            mountPath: /etc/identity
            readOnly: true
          - name: identity-key-sec
            mountPath: /app/keys
            readOnly: true
    volumes:
      - name: identity-conf
        configMap:
          name: identity-conf
      - name: identity-key-sec
        secret:
          secretName: identity-key-sec
  file-storage:
    replicas: 1
    containers:
      - name: file-storage
        image: file-storage:local
        volumeMounts:
          - name: file-storage-conf
            mountPath: /etc/file-storage
            readOnly: true
          - name: public-rsa-key-sec
            mountPath: /app/keys
            readOnly: true
        envFrom:
          - secretRef:
              name: file-storage-sec-env
    volumes:
      - name: file-storage-conf
        configMap:
          name: file-storage-conf
      - name: public-rsa-key-sec
        secret:
          secretName: public-rsa-key-sec
  user:
    replicas: 1
    containers:
      - name: user
        image: user:local
        volumeMounts:
          - name: user-conf
            mountPath: /etc/user
            readOnly: true
          - name: public-rsa-key-sec
            mountPath: /app/keys
            readOnly: true
        envFrom: 
          - secretRef:
              name: user-sec-env
    volumes:
      - name: user-conf
        configMap:
          name: user-conf
      - name: public-rsa-key-sec
        secret:
          secretName: public-rsa-key-sec

services:
  messaging:
    selector:
      name: messaging
    ports:
      - name: http
        port: 8080
        targetPort: 8080
        protocol: TCP
  identity:
    selector:
      name: identity
    ports:
      - name: http
        port: 5000
        targetPort: 5000
        protocol: TCP
  file-storage:
    selector:
      name: file-storage
    ports:
      - name: http
        port: 5004
        targetPort: 5004
        protocol: TCP
      - name: grpc
        port: 9090
        targetPort: 9090
        protocol: TCP
  user:
    selector:
      name: user
    ports:
      - name: http
        port: 5004
        targetPort: 5004
        protocol: TCP

redis:
  messaging-redis:
    secret: messaging-redis-sec-env
  identity-redis:
    secret: identity-redis-sec-env
  file-storage-redis:
    secret: file-storage-redis-sec-env

pg:
  messaging-pg:
    instances: 1
    database: messaging
    owner: messaging
    secret: messaging-pg-sec
  file-storage-pg:
    instances: 1
    database: filemetadata
    owner: filestorage
    secret: file-storage-pg-sec-env

configMaps:
  messaging-conf:
    data:
      config.yml: |
        jwt:
          signing_method: RS256
          issuer: identity_service
          audience:
            - messaging_service
          key_file_path: /app/keys/rsa.pub
        redis:
          addr: messaging-redis:6379
          password: secret
          db: 0
        file_storage:
          grpc_addr: file-storage-service:9090
        otlp:
          grpc_addr: otel-collector:4317
  identity-conf:
    data:
      config.yml: |
        access_token:
          signing_method: HS512
          lifetime: 5m 
          issuer: identity_service
          audience: 
            - client
          key_file_path: /app/keys/sym
        refresh_token:
          signing_method: HS512
          lifetime: 30m 
          issuer: identity_service
          audience: 
            - client
          key_file_path: /app/keys/sym
        internal_token:
          signing_method: RS256
          lifetime: 1m 
          issuer: identity_service
          audience: 
            - identity_service
          key_file_path: /app/keys/rsa
        invalidated_token_storage:
          exp: 4m # A little bit longer than refresh_token.lifetime
        userservice:
          grpc_addr: user-service:50051
        redis:
          addr: identity-redis:6379
          password: secret
          db: 0
        signin_meta:
          lifetime: 2m
        signup_meta:
          lifetime: 2m
        idempotency:
          data_exp: 10m
        phone_code:
          send_frequency: 1m
        sms:
          type: stub
          stub:
            addr: http://sms-service-stub:5023
        otlp:
          grpc_addr: otel-collector:4317
  file-storage-conf:
    data:
      config.yml: |
        jwt:
          signing_method: RS256
          lifetime: 3m
          issuer: identity_service
          audience: 
            - file_storage_service
          key_file_path: /app/keys/rsa.pub
        redis:
          addr: file-storage-redis:6379
          password: secret
          db: 0
        idempotency:
          data_exp: 10m
        upload:
          file_size_limit: 10485760 # 10MB
        multipart_upload:
          min_file_size: 524288000 # 10MB
          max_part_size: 1048576 # 100MB
        otlp:
          grpc_addr: otel-collector:4317
        grpc_service:
          port: 9090
  user-conf:
    data:
      config.yml: |
        server:
          grpc-port: "50051" 
        jwt:
          signing_method: RS256
          lifetime: 3m
          issuer: identity_service
          audience: 
            - user_service
          key_file_path: /app/keys/rsa.pub
        otlp:
          grpc_addr: otel-collector:4317

localSecrets:
  # Messaging service
  messaging-sec-env:
    stringData:
      PG_CONN_STRING: postgres://messaging:secret@messaging-pg-rw:5432/messaging
  messaging-pg-sec:
    stringData:
      username: messaging
      password: secret
  messaging-redis-sec-env:
    stringData:
      REDIS_PASSWORD: secret
  # Identity service
  identity-redis-sec-env:
    stringData:
      REDIS_PASSWORD: secret
  # File storage service
  file-storage-sec-env:
    stringData:
      FILE_STORAGE_AWS_ACCESS_KEY_ID: dummy
      FILE_STORAGE_AWS_REGION: dummy
      FILE_STORAGE_AWS_ENDPOINT_URL: dummy
      FILE_STORAGE_AWS_SECRET_ACCESS_KEY: dummy
      FILE_STORAGE_S3_BUCKET: dummy
      FILE_STORAGE_S3_URL_PREFIX: dummy
      FILE_STORAGE_DB_DSN: host=file-storage-postgres port=5432 user=postgres password=secret dbname=file_metadata sslmode=disable
  file-storage-redis-sec-env:
    stringData:
      REDIS_PASSWORD: secret
  # User service
  user-sec-env:
    stringData:

  # JWT signing keys
  public-rsa-key-sec:
    stringData:
      rsa.pub: &rsapub |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnbN5PLBLOiEdxNkvTHLM
        7Xj8rec3Vmcp1pMo2tCk5Ga4PycwEidpdxuDsW+OuA6k6ZqUof72iY8sAeq+RVyD
        165u7MEWmPrMbPaaDBB1N6GqV3Ux00G3acR0BvF/4TrsIxVHKnl4MMkDkX6m0zM/
        wVGWxZWbs+t5R3Vzn85L2ldEl/ZOk0HVyKV7tCeJme1pwztsGUscuShPVXwsdbpl
        dyo29/WvvxGfawKeFYrIYrTxXmRC2kLuGQ3YS6evTFuSNMVQVcESNxQRJTsQTWDk
        5Abz97Smis+A375AeyMVbwa7g/QprxvFL0+8JQkEExxKGwsuH+EmB4TV2O/Mj9hG
        pwIDAQAB
        -----END PUBLIC KEY-----
  identity-key-sec:
    stringData:
      sym: ee2273552ddeb48b8012691417a0d17ef24feb1a53cf3fd936e999e5827436334861878b8d22a0278a659323d1b2605ab5ccafd4bf38c8417df998035f2f2558
      rsa.pub: *rsapub
      rsa: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCds3k8sEs6IR3E
        2S9McsztePyt5zdWZynWkyja0KTkZrg/JzASJ2l3G4Oxb464DqTpmpSh/vaJjywB
        6r5FXIPXrm7swRaY+sxs9poMEHU3oapXdTHTQbdpxHQG8X/hOuwjFUcqeXgwyQOR
        fqbTMz/BUZbFlZuz63lHdXOfzkvaV0SX9k6TQdXIpXu0J4mZ7WnDO2wZSxy5KE9V
        fCx1umV3Kjb39a+/EZ9rAp4VishitPFeZELaQu4ZDdhLp69MW5I0xVBVwRI3FBEl
        OxBNYOTkBvP3tKaKz4DfvkB7IxVvBruD9CmvG8UvT7wlCQQTHEobCy4f4SYHhNXY
        78yP2EanAgMBAAECggEABJdzVLkx/4fI+kXJPZnBbg/4lMb80qcJ+KWWlMRqwKcI
        VKJl9mlaW0LxqIATMOMQRH2hN+mYsQmk94tSWJT91mZNntbCZdg2N91NlUNXaQlr
        0G8Tm8833BGsaoABQAQQrbbSuHcKm6pb+xJWdiNxsZsYCjm1wQfT+KjVTIEGWV2R
        t+cdNw1PsxNV6N2DF5IUU83iMJ4TfYAmgClTfRWSXkGI1L/81q003LQZikBh6qIq
        P19h6aSBKhXMd6AehMbepNiTd/fIMmLHMPDOVJxA+zXzgemJi0FpHwv4m9lxHu+K
        NydBDemRaT4VIs/h85fV7tk/iM0esvLSz3RoHFmtHQKBgQDWaNkvd56zl3VkhMgB
        3qq4Feb2DJTr6WdEwezpHuwgXTyVYZVq8gpI5tziIvUM7NYgXa37241j9V9ieOnj
        hMCNTq4JsAI03jTs3RJFarNFXAXjOmjjiBgKw8wmhhfuFjWO67blgnFQA7RjPYpY
        4+eT8pge0QRjixsYnJlgv6SfhQKBgQC8SpgnKFtHhrXT8aARJSgwUUpEB7ZJu5ED
        BYeSy9o3cKdMFtYd2Zx/HJprvWDfevUgFc1tKQDI3p3FyviJ8YA4V7eqv1YnIpW5
        MVSDxPkIAIimUvIU4EnNS/C3cMyvC0X2dR2kys1Lwzsl+3W2MFSBBzhyjr8h9EKB
        4JC0eKVnOwKBgQCEjSVX1xfh50zH697KaSIZ1FCI5JZcklspgso4BMnt6DZAE6gQ
        CbqZ/z+m/f2JFBH8yG17OuxaU6O4eQ//fF6d/XpSuuFiVc1acgGNsL1Lr+xj4gRe
        RhC29v0LA/NfWZOa29aiZNYwpVmr0Kvq8FqGeH/a7VVNRP5nZMjdqxzXEQKBgBwj
        ga2IaGu+A/pSh7tINENUQqb8CA/oyfkLoIEdmdTjLv0+BG2dkbelTKaBPLLpKyzK
        VVLU59sc+bMPbCkhQCorYbVQts1Oa9WrO5gdnaHGgqVoi+j2w9C8YpLndo9KPgBg
        7DcuX5PM70/zzlmVy2sk6xijoIiweifyqW1vAjj1AoGBANMbgbfNdeZEF1d9X04d
        e0kbra97p0k1I1E09L4895/3lZU+HkSrbnlPHGZ9aKB2VIlY0+8xwHgUN8HvT5/a
        6fX7MPkRSFszgmydJIg5emxb6zhQCRlh7M4EOMmRqjJrnv22VoGaSZYD6SW6ItLa
        vHasSnqsYHwoGeirQr2ACOkX
        -----END PRIVATE KEY-----
