services:
  nginx:
    image: nginx:latest
    ports: [80:80, 443:443]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - identity-service
      - file-storage-service
  identity-service:
    build: ./identity-service
    volumes:
      - ./identity-service/config.yml:/app/config.yml:ro
      - ./keys:/app/keys:ro
    depends_on:
      - redis
  file-storage-service:
    build: ./file-storage-service
    volumes:
      - ./file-storage-service/config.yml:/app/config.yml:ro
      - ./keys/rsa.pub:/app/keys/rsa.pub:ro
    environment:
      FILE_STORAGE_AWS_ACCESS_KEY_ID: ${FILE_STORAGE_AWS_ACCESS_KEY_ID}
      FILE_STORAGE_AWS_REGION: ${FILE_STORAGE_AWS_REGION}
      FILE_STORAGE_AWS_ENDPOINT_URL: ${FILE_STORAGE_AWS_ENDPOINT_URL}
      FILE_STORAGE_AWS_SECRET_ACCESS_KEY: ${FILE_STORAGE_AWS_SECRET_ACCESS_KEY}
      FILE_STORAGE_DB_DSN: host=postgres port=5432 user=postgres password=secret dbname=file_metadata sslmode=disable
    depends_on:
      - redis
      - postgres
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=postgres
      - POSTGRES_DB=file_metadata
  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=secret

  # Stubs
  user-service-stub:
    build:
      context: stubs/user-service-stub
      dockerfile: Dockerfile
  sms-service-stub:
    build:
      context: stubs/sms-service-stub
volumes:
  redis_data:
  postgres_data: