openapi: 3.0.3
info:
  title: chakchat-backend
  version: 0.0.1
servers:
  - url: http://localhost:80/api/messaging/v1.0/
tags:
  - name: personal chat
paths: 
  /chat/personal/{chatId}:
    get:
      summary: Get chat
      description: Get chat
      tags: [personal chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PersonalChat'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /chat/personal:
    post:
      summary: Create chat
      description: Create chat
      tags: [personal chat]
      security:
        - bearerAuth: []
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: Idempotency key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalChatRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PersonalChat'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithDetails'
  /chat/personal/block/{chatId}:
    put:
      summary: Block chat
      description: Block chat
      tags: [personal chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithDetails'
  /chat/personal/unblock/{chatId}:
    put:
      summary: Unblock chat
      description: Unblock chat
      tags: [personal chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithDetails'
  /chat/personal/secret:
    post:
      summary: Create secret chat
      description: Create secret chat
      tags: [personal chat]
      security:
        - bearerAuth: []
      parameters:
        - name: Idempotency-Key
          in: header
          description: Idempotency key
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretChatRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SecretChat'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /chat/personal/delete/{chatId}/{deleteMode}:
    delete:
      summary: Delete chat
      description: Delete chat
      tags: [personal chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: deleteMode
          in: path
          required: true
          schema:
            type: string
            enum: [only_me, all]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /chat/group:
    post:
      summary: Create a group
      description: Create a group
      tags: [group chat]
      security:
        - bearerAuth: []
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateGroupRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    "$ref": "#/components/schemas/GroupChat"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponseWithDetails"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  /chat/group/{chatId}:
    get:
      summary: Get group
      description: Get group
      tags: [group chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GroupChat'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags: [group chat]
      summary: Update group chat
      description: Update group chat
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupChatRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GroupChat'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags: [group chat]
      summary: Delete group chat
      description: Delete group chat
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChat"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  /chat/group/{chatId}/member/{memberId}:
    put:
      summary: Add new member
      description: Add new member to group chat
      tags: [group chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChat"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        404:
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
    delete:
      summary: Delete a group chat member
      description: Delete a group chat member
      tags: [group chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChat"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        404:
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  /chat/group/{chatId}/photo:
    put:
      summary: Update group photo
      description: Update group photo
      tags: [group chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupPhotoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GroupChat'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithDetails'
    delete:
      summary: Delete group photo
      description: Delete group photo
      tags: [group chat]
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChat"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  /chat/group/secret:
    post:
      summary: Create secret group chat
      description: Create secret group chat
      tags: [group chat]
      security:
        - bearerAuth: []
      parameters:
        - name: Idempotency-Key
          in: header
          description: Idempotency key
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretGroupRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GroupChat'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UpdateGroupPhotoRequest:
      type: object
      properties:
        photo_id:
          type: string
          format: uuid
          description: Photo id. It is used to identify photo loaded to file storage.
      required:
        - photo_id
    CreateGroupRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            type: string
            format: uuid
      required:
        - name
        - description
        - members
    CreateSecretGroupRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            type: string
            format: uuid
      required:
        - name
        - description
        - members
    UpdateGroupChatRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
    GroupChat:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            type: string
            format: uuid
        created_at:
          type: string
          format: date-time
        admin_id:
          type: string
          format: uuid
        secret:
          type: boolean
        group_photo:
          type: string
          format: url
      required:
        - id
        - name
        - description
        - members
        - created_at
        - admin_id
        - secret
    CreateSecretChatRequest:
      type: object
      properties:
        member_id:
          type: string
          format: uuid
      required:
        - member_id
    SecretChat:
      type: object
      properties:
        id:
          type: string
          format: uuid
        member_id:
          type: string
          format: uuid
        blocked:
          type: boolean
        blocked_by:
          type: array
          items:
            type: string
            format: uuid
          description: List of user ids who blocked this chat
    CreatePersonalChatRequest:
      type: object
      properties:
        member_id:
          type: string
          format: uuid
      required:
        - member_id
    PersonalChat:
      type: object
      properties:
        chat_id:
          type: string
          format: uuid
        name:
          type: string
        member_id:
          type: string
          format: uuid
        blocked:
          type: boolean
        blocked_by:
          type: array
          items:
            type: string
            format: uuid
          description: List of user ids who blocked this chat
        # TODO: Here should be:
        # 1. Preview updates
        # 2. Aggregated all updates
      required:
        - chat_id
        - name
        - member_id
        - blocked
        - blocked_by
    EmptySuccessResponse:
      type: object
      example: {}
    ErrorResponseWithDetails:
      type: object
      description: Error response specified by standard.md
      properties:
        error_type:
          type: string
          nullable: false
        error_message:
          type: string
          nullable: false
        error_details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                nullable: false
              message:
                type: string
                nullable: false
      example:
        error_type: verification_failed
        error_message: Input is invalid
        error_details:
          - field: some_field
            message: Some field is invalid  
    ErrorResponse:
      type: object
      description: Error response specified by standard.md
      properties:
        error_type:
          type: string
          nullable: false
        error_message:
          type: string
          nullable: false
        error_details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                nullable: false
              message:
                type: string
                nullable: false
      example:
        error_type: invalid_input
        error_message: Input is invalid
        error_details: []